{"version":3,"sources":["components/Container.tsx","components/IncrementButton.tsx","components/Separator.tsx","components/Subtitle.tsx","components/Title.tsx","hooks/useWeek.ts","functions/getWeekFromYearByIndex.ts","functions/shuffleSeason.ts","functions/shuffle.ts","hooks/useYear.ts","hooks/useSeed.ts","App.tsx","hooks/useIncrement.ts","reportWebVitals.ts","index.tsx"],"names":["children","style","display","flexDirection","height","justifyContent","textAlign","onClick","marginBottom","padding","fontFamily","fontSize","fontStyle","fontWeight","letterSpacing","index","year","useState","week","setWeek","useEffect","spring","summer","fall","winter","getWeekFromYearByIndex","season","map","value","sort","Math","random","a","b","seed","useParams","seedrandom","global","useSeed","setYear","yearData","data","shuffleSeason","count","setCount","useCallback","useIncrement","increment","useYear","useWeek","Container","Title","Subtitle","prompt","length","Separator","IncrementButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","path","App","document","getElementById"],"mappings":"+mTAEe,kBAAGA,EAAH,EAAGA,SAAH,OACb,qBACEC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,QACRC,eAAgB,SAChBC,UAAW,UANf,SASGN,K,gBCVU,kBACbO,EADa,EACbA,QADa,OAKb,8BACE,wBACEN,MAAO,CACLO,aAAc,OACdC,QAAS,aACTC,WAAY,QACZC,SAAU,QAEZJ,QAASA,EAPX,qBCRW,oBACb,qBACEN,MAAO,CACLS,WAAY,QACZE,UAAW,SACXC,WAAY,OACZJ,QAAS,QALb,iBCCa,kBAAGT,EAAH,EAAGA,SAAH,OACb,oBACEC,MAAO,CACLS,WAAY,QACZJ,UAAW,UAHf,SAMGN,KCPU,kBAAGA,EAAH,EAAGA,SAAH,OACb,oBACEC,MAAO,CACLS,WAAY,QACZI,cAAe,UACfH,SAAU,OACVC,UAAW,SACXH,QAAS,OACTH,UAAW,UAPf,SAUGN,K,QCPU,WAACe,EAAeC,GAAsB,IAAD,EAC1BC,mBAAe,IADW,mBAC3CC,EAD2C,KACrCC,EADqC,KAKlD,OAHAC,qBAAU,WACRD,GAAQ,kBCNG,SAACJ,EAAeC,GAAhB,OACbA,GAAQD,GAAS,GAAKA,EAAQ,GAC1B,sBAAIC,EAAKK,QAAT,YAAoBL,EAAKM,QAAzB,YAAoCN,EAAKO,MAAzC,YAAkDP,EAAKQ,SAAQT,GAC/D,GDGYU,CAAuBV,EAAOC,QAC3C,CAACD,EAAOC,IACJE,G,QERM,WAACQ,GAAD,OAA4CA,ECDtDC,KAAI,SAACC,GAAD,MAAY,CAAEA,QAAOC,KAAMC,KAAKC,aACpCF,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEH,KAAOI,EAAEJ,QAC1BF,KAAI,qBAAGC,U,wBCEG,cCFA,WAAO,IACZM,EAASC,cAATD,KACRd,qBAAU,WACRgB,IAAWF,EAAM,CAAEG,QAAQ,MAC1B,CAACH,IDDJI,GADyB,MAEDrB,mBAAe,MAFd,mBAElBD,EAFkB,KAEZuB,EAFY,KAgBzB,OAbAnB,qBAAU,WACRmB,GAAQ,WACN,IAAMC,EAAWC,EACjB,OAAOD,EACF,CACCnB,OAAQqB,EAAcF,EAASnB,QAC/BC,OAAQoB,EAAcF,EAASlB,QAC/BC,KAAMmB,EAAcF,EAASjB,MAC7BC,OAAQkB,EAAcF,EAAShB,SAEjC,UAEL,IACIR,GEZM,aAAO,IAAD,ECRN,WAA6B,IAAD,EACfC,mBAAS,GADM,mBAClC0B,EADkC,KAC3BC,EAD2B,KAKzC,MAAO,CAACD,EAHUE,uBAAY,WAC5BD,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,KDKwBG,GADR,mBACZH,EADY,KACLI,EADK,KAEb/B,EAAOgC,IACP9B,EAAO+B,EAAQN,EAAO3B,GAC5B,OACE,eAACkC,EAAD,WACE,cAACC,EAAD,0BACA,cAACC,EAAD,2BAAqBT,EAAQ,EAA7B,QACA,qBAAK1C,MAAO,CAAEQ,QAAS,QAAvB,SACGS,EAAKS,KAAI,SAAC0B,EAAQtC,GAAT,OACR,eAAC,WAAD,WACGsC,EACAtC,EAAQG,EAAKoC,OAAS,EAAI,cAACC,EAAD,IAAgB,OAF9BxC,QAMnB,cAACyC,EAAD,CAAiBjD,QAASwC,Q,iBEZjBU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAYC,SAAS,eAArB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAACC,EAAD,YAKRC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.2a1f3b14.chunk.js","sourcesContent":["import { PropsWithChildren } from \"react\";\n\nexport default ({ children }: PropsWithChildren<{}>) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n    }}\n  >\n    {children}\n  </div>\n);\n","import { MouseEventHandler } from \"react\";\n\nexport default ({\n  onClick,\n}: {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}) => (\n  <div>\n    <button\n      style={{\n        marginBottom: \"1rem\",\n        padding: \".5rem 1rem\",\n        fontFamily: \"serif\",\n        fontSize: \"1rem\",\n      }}\n      onClick={onClick}\n    >\n      Next\n    </button>\n  </div>\n);\n","export default () => (\n  <div\n    style={{\n      fontFamily: \"serif\",\n      fontStyle: \"italic\",\n      fontWeight: \"bold\",\n      padding: \"1rem\",\n    }}\n  >\n    or\n  </div>\n);\n","import { PropsWithChildren } from \"react\";\n\nexport default ({ children }: PropsWithChildren<{}>) => (\n  <h2\n    style={{\n      fontFamily: \"serif\",\n      textAlign: \"center\",\n    }}\n  >\n    {children}\n  </h2>\n);\n","import { PropsWithChildren } from \"react\";\n\nexport default ({ children }: PropsWithChildren<{}>) => (\n  <h1\n    style={{\n      fontFamily: \"serif\",\n      letterSpacing: \".125rem\",\n      fontSize: \"3rem\",\n      fontStyle: \"italic\",\n      padding: \"1rem\",\n      textAlign: \"center\",\n    }}\n  >\n    {children}\n  </h1>\n);\n","import { useEffect, useState } from \"react\";\n\nimport { Week } from \"../types/Week\";\nimport { Year } from \"../types/Year\";\nimport getWeekFromYearByIndex from \"../functions/getWeekFromYearByIndex\";\n\nexport default (index: number, year: Year): Week => {\n  const [week, setWeek] = useState<Week>([]);\n  useEffect(() => {\n    setWeek(() => getWeekFromYearByIndex(index, year));\n  }, [index, year]);\n  return week;\n};\n","import { Week } from \"../types/Week\";\nimport { Year } from \"../types/Year\";\n\nexport default (index: number, year: Year): Week =>\n  year && index >= 0 && index < 52\n    ? [...year.spring, ...year.summer, ...year.fall, ...year.winter][index]\n    : [];\n","import { Season } from \"../types/Season\";\nimport shuffle from \"./shuffle\";\n\nexport default (season: Season): Season => shuffle<Season>(season);\n","export default <T extends any[]>(items: T): T =>\n  items\n    .map((value) => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value) as T;\n","import { useEffect, useState } from \"react\";\nimport { Year } from \"../types/Year\";\nimport data from \"../data/year.json\";\nimport shuffleSeason from \"../functions/shuffleSeason\";\nimport useSeed from \"./useSeed\";\n\nexport default (): Year => {\n  useSeed();\n  const [year, setYear] = useState<Year>(null);\n  useEffect(() => {\n    setYear(() => {\n      const yearData = data as unknown as Year;\n      return yearData\n        ? ({\n            spring: shuffleSeason(yearData.spring),\n            summer: shuffleSeason(yearData.summer),\n            fall: shuffleSeason(yearData.fall),\n            winter: shuffleSeason(yearData.winter),\n          } as Year)\n        : null;\n    });\n  }, []);\n  return year;\n};\n","import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport seedrandom from \"seedrandom\";\n\nexport default () => {\n  const { seed } = useParams<{ seed: string }>();\n  useEffect(() => {\n    seedrandom(seed, { global: true });\n  }, [seed]);\n};\n","import Container from \"./components/Container\";\nimport { Fragment } from \"react\";\nimport IncrementButton from \"./components/IncrementButton\";\nimport Separator from \"./components/Separator\";\nimport Subtitle from \"./components/Subtitle\";\nimport Title from \"./components/Title\";\nimport useIncrement from \"./hooks/useIncrement\";\nimport useWeek from \"./hooks/useWeek\";\nimport useYear from \"./hooks/useYear\";\n\nexport default () => {\n  const [count, increment] = useIncrement();\n  const year = useYear();\n  const week = useWeek(count, year);\n  return (\n    <Container>\n      <Title>Disquietude</Title>\n      <Subtitle>{`~ Week ${count + 1} ~`}</Subtitle>\n      <div style={{ padding: \"2rem\" }}>\n        {week.map((prompt, index) => (\n          <Fragment key={index}>\n            {prompt}\n            {index < week.length - 1 ? <Separator /> : null}\n          </Fragment>\n        ))}\n      </div>\n      <IncrementButton onClick={increment} />\n    </Container>\n  );\n};\n","import { useCallback, useState } from \"react\";\n\nexport default (): [number, () => void] => {\n  const [count, setCount] = useState(0);\n  const increment = useCallback(() => {\n    setCount((count) => count + 1);\n  }, []);\n  return [count, increment];\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/disquietude\">\n      <Switch>\n        <Route path=\"/:seed?\">\n          <App />\n        </Route>\n      </Switch>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}